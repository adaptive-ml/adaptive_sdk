################# Mutations

mutation CreateMetric($input: MetricCreate!) {
  createMetric(input: $input) {
    ...MetricData
  }
}

mutation LinkMetric($input: MetricLink!) {
  linkMetric(input: $input) {
    ...MetricWithContextData
  }
}

mutation UnlinkMetric($input: MetricUnlink!) {
  unlinkMetric(input: $input)
}

mutation AttachModelToUseCase($input: AttachModel!) {
  attachModel(input: $input) {
    ...ModelServiceData
  }
}

mutation AddExternalModel($input: AddExternalModelInput!) {
  addExternalModel(input: $input) {
    ...ModelData
    }
  }

mutation AddModel($input: AddModelInput!) {
  addModel(input: $input) {
    ...ModelData
    backbone {
      ...ModelData
    }
  }
}

mutation UpdateModel($input: UpdateModelService!) {
  updateModelService(input: $input) {
    ...ModelServiceData
  }
}

mutation DeployModel($idOrKey: IdOrKey!, $wait: Boolean!) {
  deployModel(idOrKey: $idOrKey, wait: $wait)
}

mutation TerminateModel($idOrKey: IdOrKey!, $force: Boolean!) {
  terminateModel(idOrKey: $idOrKey, force: $force)
}

mutation CreateUseCase($input: UseCaseCreate!) {
  createUseCase(input: $input) {
    ...UseCaseData
  }
}

mutation CreateAbCampaign($input: AbcampaignCreate!) {
  createAbCampaign(input: $input){
    ...AbCampaignCreateData
  }
}

mutation CancelABCampaign($input: IdOrKey!) {
  cancelAbCampaign(input: $input)
}


mutation LoadDataset($input: DatasetCreate!, $file: Upload!) {
  createDataset(input: $input, file: $file) {
    ...DatasetData
  }
}

mutation CreateTrainingJob($input: TrainingJobInput!) {
  createTrainingJob(input: $input) {
    ...TrainingJobData
  }
}

mutation CancelTrainingJob($id: UUID!) {
  cancelTrainingJob(id: $id)
}

mutation CreateEvaluationJob($input: EvaluationCreate!) {
  createEvaluationJob(input: $input) {
    ...EvaluationJobData
  }
}

mutation AddHFModel($input: AddHFModelInput!) {
  importHfModel(input: $input)
}
################# Queries

query ListDatasets($input: IdOrKey!) {
  datasets(useCase: $input){
    ...DatasetData
  }
}

query DescribeDataset($input: IdOrKey!) {
  dataset(idOrKey: $input) {
    ...DatasetData
  }
}

query DescribeUseCase($input: IdOrKey!) {
  useCase(idOrKey: $input) {
    ...UseCaseData
  }
}

query ListUseCases {
  useCases {
    ...UseCaseData
  }
}

query ListModels {
  models {
    ...ModelDataAdmin
    backbone {
      ...ModelDataAdmin
    }
  }
}

query DescribeModelAdmin($input: IdOrKey!) {
  model(idOrKey: $input){
    ...ModelDataAdmin
    backbone{
      ...ModelDataAdmin
    }
  }
}

query DescribeModel($input: IdOrKey!) {
  model(idOrKey: $input){
    ...ModelData
    backbone{
      ...ModelData
    }
  }
}

query ListMetrics {
  metrics {
    ...MetricDataAdmin
  }
}

query DescribeMetricAdmin($input: IdOrKey!) {
  metric(idOrKey: $input) {
    ...MetricDataAdmin
  }
}

query DescribeMetric($input: IdOrKey!) {
  metric(idOrKey: $input) {
    ...MetricData
  }
}


query ListAbCampaigns($input: AbCampaignFilter!) {
  abCampaigns(filter: $input) {
    ...AbCampaignDetailData
  }
}

query DescribeAbCampaign($input: IdOrKey!) {
  abCampaign(idOrKey: $input) {
    ...AbCampaignDetailData
    report {
      ...AbCampaignReportData
    }
  }
}

query Me {
  me {
    id
    email
    name
    createdAt
  }
}

query ListInteractions(
  $filter: ListCompletionsFilterInput!, 
  $page: CursorPageInput!, 
  $order: [OrderPair!] = [{field: "created_at", order: DESC}]
) { 
  completions(
    filter: $filter, 
    page: $page,
    order: $order
  ) { 
  	totalCount
    pageInfo {
      hasNextPage,
      endCursor
    }
    nodes {
      ...CompletionData
    }
  }
}

query ListGroupedInteractions(
  $filter: ListCompletionsFilterInput!, 
  $groupBy: CompletionGroupBy!,
  $page: CursorPageInput!, 
  $order: [OrderPair!] =  [{ field: "group", order: ASC }]
) { 
  completionsGrouped(
    groupBy: $groupBy
    filter: $filter, 
    page: $page,
    order: $order
  ) { 
    totalCount
    groupBy
    pageInfo {
      hasNextPage,
      endCursor
    }
    nodes {
      key
      count
      directFeedbacksStats {
        metric {
          ...MetricData
        }
        feedbacks
        average
        max
        min
        stddev
        sum
      }
      completions(
        page: $page, 
        order: [{ field: "created_at", order: DESC }]
      ) {
        nodes {
          ...CompletionData
        }
      }
    }
  }
}

query DescribeInteraction ($useCase: IdOrKey!, $id: UUID!) { 
  completion(
    useCase: $useCase,
    id: $id
  ) { 
    ...CompletionData
    }
}

query DescribeTrainingJob ($id: UUID!) {
  trainingJob(id: $id) {
    ...TrainingJobData
  }
}

query ListTrainingJobs {
  trainingJobs {
    ...TrainingJobData
  }
}

query DescribeEvaluationJob ($id: UUID!) {
  evaluationJob(id: $id) {
    ...EvaluationJobData
  }
}

query ListEvaluationJobs {
  evaluationJobs{
    ...EvaluationJobData
  }
}
################# Fragments

fragment EvaluationJobData on EvaluationJob {
  id 
  name
  status
  createdAt
  startedAt
  endedAt
  durationMs
  modelServices {
    ...ModelServiceData
  }
  judge {
    ...ModelServiceData
  }
  stages {
    ...JobStageOutputData
  }
  useCase {
    ...UseCaseData
  }
  report {
    ...AbCampaignReportData
  }
  dataset {
    ...DatasetData
  }
  createdBy {
    id 
    email
    name
  }
}

fragment TrainingJobData on TrainingJob {
  id 
  name
  status
  createdAt
  startedAt
  endedAt
  durationMs
  stages {
    ...JobStageOutputData
  }
  parentModel {
    ...ModelData
    backbone {
      ...ModelData
    }
  }
  childModel {
    ...ModelData
    backbone {
      ...ModelData
    }
  }
  useCase {
    ...UseCaseData
  }
  config {
    outputName
    sampleConfig {
      feedbackType
      selectionType
      maxSamples
      filter {
        ...ListCompletionsFilterOutputData
      }
    }
    trainingConfig {
      ...TrainingConfigOutputData
    }    
  }
  createdBy {
    id 
    email
    name
  }
}

fragment TrainingConfigOutputData on TrainingConfigOutput {
  baseTrainingParams {
    learningRate
    numEpochs
    batchSize
    numValidations
  }
  trainingMetadata {
    trainingType
    alignmentMethod
    parameters {
      __typename
      ... on DpotrainingParamsOutput {
        klDivCoeff
      }
      ... on PpotrainingParamsOutput {
        klDivCoeff
      }
    }
  }
  trainingObjective {
    __typename
    ... on MetricTrainingParamsOutput {
      metricKey
      metricMetadata {
        ... on ScalarMetricConfigOutput {
          threshold
        }
      }
    }
    ... on GuidelinesTrainingParamsOutput {
      judgeModel
      judgeModelPrompt
    }
  }
}

fragment ListCompletionsFilterOutputData on ListCompletionsFilterOutput {
  useCase
  models
  timerange {
    from 
    to
  }
  feedbacks {
    metric
  }
  labels {
    key
    value
  }
  tags
  source
}

fragment JobStageOutputData on JobStageOutput {
  name
  status
  parent
  stageId
  info {
    __typename
    ... on TrainingJobStageOutput {
      trainingMonitoringLink
      totalNumSamples
      processedNumSamples
      checkpoints
    }
    ... on EvalJobStageOutput {
      totalNumSamples
      processedNumSamples
    }
    ... on BatchInferenceJobStageOutput {
      totalNumSamples
      processedNumSamples
    }
  }
  startedAt 
  endedAt
}

fragment DatasetData on Dataset {
  id 
  key
  name
  createdAt
}

fragment CompletionData on Completion {
  id
  prompt
  chatMessages {
    role
    content
  }
  completion
  source
  model {
    id
    key
    name
  }
  directFeedbacks {
    id
    value
    metric {
      ...MetricData
    }
    reason
    details
    createdAt   
  }
  labels {key, value}
  createdAt
}

fragment MetricWithContextData on MetricWithContext {
  id
  key
  name
  kind
  description
  scoringType
  createdAt
}

fragment UseCaseData on UseCase {
  id
  key
  name
  description
  createdAt

  metrics {
    ...MetricWithContextData
  }

  modelServices {
    ...ModelServiceData
  }
}

fragment MetricDataAdmin on Metric {
  id
  key
  name
  kind
  description
  scoringType
  useCases{
    id
    name
    key
    description
  }
  createdAt
  hasDirectFeedbacks
  hasComparisonFeedbacks
}
fragment MetricData on Metric {
  id
  key
  name
  kind
  description
  scoringType
  createdAt
  hasDirectFeedbacks
  hasComparisonFeedbacks
}

fragment ModelDataAdmin on Model {
  id
  key
  name
  online
  useCases{
    id 
    key 
    name
  }
  isExternal
  providerName
  isAdapter
  isTraining
  createdAt
  kind
}

fragment ModelData on Model {
  id
  key
  name
  online
  isExternal
  providerName
  isAdapter
  isTraining
  createdAt
  kind
}

fragment ModelServiceData on ModelService {
  id
  key
  name
  model {
    ...ModelData
      backbone {
      ...ModelData
    }
  }
  attached
  isDefault
  desiredOnline
  createdAt
}

fragment AbCampaignCreateData on Abcampaign {
  id
  key
  status
  beginDate
}

fragment AbCampaignDetailData on Abcampaign {
    ...AbCampaignCreateData
    feedbackType
    trafficSplit
    endDate
    metric{
      ...MetricData
    }
    useCase{
      id
      key
      name
    }
    models {
      id
      key
      name
    }
    feedbacks
    hasEnoughFeedbacks
}

fragment AbCampaignReportData on AbReport {
  pValue
  variants {
    variant {
      id
      key
      name
    }
    interval {
      start
      middle
      end
    }
    feedbacks
    comparisons {
      feedbacks
      wins
      losses
      tiesGood
      tiesBad
      variant {
        id
        key
        name
      }
    }
  }
}

